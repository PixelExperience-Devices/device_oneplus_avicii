<?xml version="1.0" encoding="utf-8"?>
<!--
     Copyright (C) 2022 The Linux Foundation
     SPDX-License-Identifier: BSD-3-Clause
-->
<resources>

    <!-- Control whether the always on display mode is available. This should only be enabled on
         devices where the display has been tuned to be power efficient in DOZE and/or DOZE_SUSPEND
         states. -->
    <bool name="config_dozeAlwaysOnDisplayAvailable">true</bool>

    <!-- Whether a software navigation bar should be shown. NOTE: in the future this may be
         autodetected from the Configuration. -->
    <bool name="config_showNavigationBar">true</bool>

    <!-- When true use the linux /dev/input/event subsystem to detect the switch changes
         on the headphone/microphone jack. When false use the older uevent framework. -->
    <bool name="config_useDevInputEventForAudioJack">true</bool>

    <!-- Telephony qualified networks service package name to bind to by default. -->
    <string name="config_qualified_networks_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- IWLAN data service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_data_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- IWLAN network service package name to bind to by default. If none is specified in an overlay, an
         empty string is passed in -->
    <string name="config_wlan_network_service_package" translatable="false">vendor.qti.iwlan</string>

    <!-- Default files to pin via Pinner Service -->
    <string-array name="config_defaultPinnerServiceFiles">
        <item>/system/framework/arm64/boot-framework.oat</item>
        <item>/system/framework/arm/boot-framework.oat</item>
        <item>/apex/com.android.art/javalib/arm64/boot-core-libart.oat</item>
        <item>/apex/com.android.art/javalib/arm/boot-core-libart.oat</item>
        <item>/apex/com.android.art/javalib/arm64/boot-okhttp.oat</item>
        <item>/apex/com.android.art/javalib/arm/boot-okhttp.oat</item>
        <item>/apex/com.android.art/javalib/arm64/boot.vdex</item>
        <item>/apex/com.android.art/javalib/arm/boot.vdex</item>
        <item>/apex/com.android.art/javalib/arm64/boot-core-libart.vdex</item>
        <item>/apex/com.android.art/javalib/arm/boot-core-libart.vdex</item>
        <item>/apex/com.android.art/javalib/arm64/boot-core-libart.art</item>
        <item>/apex/com.android.art/javalib/arm/boot-core-libart.art</item>
        <item>/system/framework/framework-res.apk</item>
        <item>/system/lib64/libhwui.so</item>
        <item>/system/lib/libhwui.so</item>
        <item>/system/framework/boot-framework.vdex</item>
        <item>/system/framework/oat/arm64/services.vdex</item>
        <item>/system/framework/oat/arm64/services.odex</item>
        <item>/apex/com.android.art/javalib/arm64/boot.oat</item>
        <item>/apex/com.android.art/javalib/arm/boot.oat</item>
        <item>/system/framework/telephony-common.jar</item>
        <item>/system/framework/arm64/boot-telephony-common.art</item>
        <item>/system/lib64/libsurfaceflinger.so</item>
        <item>/apex/com.android.art/javalib/core-oj.jar</item>
        <item>/apex/com.android.art/javalib/core-libart.jar</item>
    </string-array>

     <!-- List of biometric sensors on the device, in decreasing strength. Consumed by AuthService
          when registering authenticators with BiometricService. Format must be ID:Modality:Strength,
          where: IDs are unique per device, Modality as defined in BiometricAuthenticator.java,
          and Strength as defined in Authenticators.java -->
    <string-array name="config_biometric_sensors" translatable="false" >
        <item>0:2:15</item>
    </string-array>

     <!-- Whether the device enable the standalone (SA) mode of 5G NR.-->
     <bool name="config_telephony5gStandalone">true</bool>

     <!-- Whether the device enable the non-standalone (NSA) mode of 5G NR.-->
     <bool name="config_telephony5gNonStandalone">true</bool>

     <!-- The default journal mode to use use when Write-Ahead Logging is not active.
         Choices are: OFF, DELETE, TRUNCATE, PERSIST and MEMORY.
         PERSIST may improve performance by reducing how often journal blocks are
         reallocated (compared to truncation) resulting in better data block locality
         and less churn of the storage media.
         The PERSIST mode results in data persisting in the journal beyond the life of
         a transaction, so it interacts poorly with SECURE_DELETE. -->
    <string name="db_default_journal_mode" translatable="false">MEMORY</string>

    <!-- The database synchronization mode when using the default journal mode.
         FULL is safest and preserves durability at the cost of extra fsyncs.
         NORMAL also preserves durability in non-WAL modes and uses checksums to ensure
         integrity although there is a small chance that an error might go unnoticed.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_default_sync_mode" translatable="false">OFF</string>

    <!-- The database synchronization mode when using Write-Ahead Logging.
         From https://www.sqlite.org/pragma.html#pragma_synchronous:
         WAL mode is safe from corruption with synchronous=NORMAL, and probably DELETE mode is safe
         too on modern filesystems. WAL mode is always consistent with synchronous=NORMAL, but WAL
         mode does lose durability. A transaction committed in WAL mode with
         synchronous=NORMAL might roll back following a power loss or system crash.
         Transactions are durable across application crashes regardless of the synchronous setting
         or journal mode. The synchronous=NORMAL setting is a good choice for most applications
         running in WAL mode.
         Choices are: FULL, NORMAL, OFF. -->
    <string name="db_wal_sync_mode" translatable="false">OFF</string>

</resources>
